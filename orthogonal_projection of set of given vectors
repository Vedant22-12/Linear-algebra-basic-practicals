import numpy as np

def gram_schmidt(vectors):
    ortho_basis = [vectors[0]]
    for v in vectors[1:]:
        ortho_basis.append(v - sum(np.dot(v, u) / np.dot(u, u) * u for u in ortho_basis))
    return ortho_basis

def orthogonal_projection(b, U):
    ortho_basis = gram_schmidt(U)
    return sum(np.dot(b, u) / np.dot(u, u) * u for u in ortho_basis)

try:
    b = np.array([float(x) for x in input("Enter vector b: ").split()])
    U = [np.array([float(x) for x in input(f"Enter vector {i + 1}: ").split()]) for i in range(int(input("Enter number of vectors in U: ")))]
    print("Orthogonal Projection of b onto U:", orthogonal_projection(b, U))
except ValueError:
    print("Error: Please enter valid numerical values.")
